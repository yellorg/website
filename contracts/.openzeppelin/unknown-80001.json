{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x6D6dF718FAf11EDf92F37503d00243f3a82eF2b8",
    "txHash": "0x49d6e589c1ce428d4e76efa49ca1d77b0828c6074c3392648033530cb198f6f0"
  },
  "proxies": [
    {
      "address": "0x512F0A20F10911A1f49f0434eC6D3C9a32E19107",
      "txHash": "0x3351d5871607c424eaad4df55c694955f4db05f145b59acb68d68449702f5efb",
      "kind": "transparent"
    },
    {
      "address": "0xC53CfF1DB34464E550508342c0a1AAEC8dfaC060",
      "txHash": "0xac8a71c57e44ffaba561b7d09f4edab9fa5bff54c0fc5d82cf55f5ac3b02c81d",
      "kind": "transparent"
    }
  ],
  "impls": {
    "10042c01cc4f76fb397cbac170d12abf5e207b4ac466d72b33b880e6fa32e6f2": {
      "address": "0xad695bd9Ce085F99152c017440dff2d8aF419b3D",
      "txHash": "0x83bdbeb34e0bcdb93b34bb8e2f890b16c02671d7b5d42f0c702f37a78a729b01",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "_cap",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:15"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20CappedUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20CappedUpgradeable.sol:50"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "152",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "202",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "203",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_issuer",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "Duckies",
            "src": "contracts/Duckies.sol:11"
          },
          {
            "label": "_referrers",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Duckies",
            "src": "contracts/Duckies.sol:20"
          },
          {
            "label": "_affiliates",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "Duckies",
            "src": "contracts/Duckies.sol:21"
          },
          {
            "label": "_referralPayouts",
            "offset": 0,
            "slot": "255",
            "type": "t_array(t_uint16)dyn_storage",
            "contract": "Duckies",
            "src": "contracts/Duckies.sol:24"
          },
          {
            "label": "_bountyPayouts",
            "offset": 0,
            "slot": "256",
            "type": "t_array(t_uint8)dyn_storage",
            "contract": "Duckies",
            "src": "contracts/Duckies.sol:25"
          },
          {
            "label": "_bounty",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint16))",
            "contract": "Duckies",
            "src": "contracts/Duckies.sol:28"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint16)dyn_storage": {
            "label": "uint16[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_string_memory_ptr,t_uint16))": {
            "label": "mapping(address => mapping(string => uint16))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_string_memory_ptr,t_uint16)": {
            "label": "mapping(string => uint16)",
            "numberOfBytes": "32"
          },
          "t_string_memory_ptr": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
